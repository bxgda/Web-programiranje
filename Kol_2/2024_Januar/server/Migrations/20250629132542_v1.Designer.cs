// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using rent_a_car.Models;

#nullable disable

namespace rent_a_car.Migrations
{
    [DbContext(typeof(RentCarContext))]
    [Migration("20250629132542_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("rent_a_car.Models.Automobil", b =>
                {
                    b.Property<int>("AutomobilID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AutomobilID"));

                    b.Property<int>("CenaPoDanu")
                        .HasColumnType("int");

                    b.Property<int>("Godiste")
                        .HasColumnType("int");

                    b.Property<bool>("Iznajmljen")
                        .HasColumnType("bit");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PredjenaKilometraza")
                        .HasColumnType("int");

                    b.HasKey("AutomobilID");

                    b.ToTable("Automobili");
                });

            modelBuilder.Entity("rent_a_car.Models.Iznajmljivanje", b =>
                {
                    b.Property<int>("IznajmljivanjeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IznajmljivanjeID"));

                    b.Property<int?>("AutomobilID")
                        .HasColumnType("int");

                    b.Property<int>("BrojDana")
                        .HasColumnType("int");

                    b.Property<int?>("KorisnikID")
                        .HasColumnType("int");

                    b.HasKey("IznajmljivanjeID");

                    b.HasIndex("AutomobilID");

                    b.HasIndex("KorisnikID");

                    b.ToTable("UgovoriIznajmljivanja");
                });

            modelBuilder.Entity("rent_a_car.Models.Korisnik", b =>
                {
                    b.Property<int>("KorisnikID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KorisnikID"));

                    b.Property<string>("BrojVozackeDozvole")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JMBG")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KorisnikID");

                    b.ToTable("Korisnici");
                });

            modelBuilder.Entity("rent_a_car.Models.Iznajmljivanje", b =>
                {
                    b.HasOne("rent_a_car.Models.Automobil", "Automobil")
                        .WithMany("UgovorIznajmljivanja")
                        .HasForeignKey("AutomobilID");

                    b.HasOne("rent_a_car.Models.Korisnik", "Korisnik")
                        .WithMany("UgovorIznajmljivanja")
                        .HasForeignKey("KorisnikID");

                    b.Navigation("Automobil");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("rent_a_car.Models.Automobil", b =>
                {
                    b.Navigation("UgovorIznajmljivanja");
                });

            modelBuilder.Entity("rent_a_car.Models.Korisnik", b =>
                {
                    b.Navigation("UgovorIznajmljivanja");
                });
#pragma warning restore 612, 618
        }
    }
}
